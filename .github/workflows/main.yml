name: main.yml

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: '**'
  pull_request:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
        ocaml-compiler:
          - 4.14.x
        include:
          - os: ubuntu-latest
            ocaml-compiler: ocaml-variants.4.14.0+options,ocaml-option-32bit
          - os: ubuntu-latest
            ocaml-compiler: ocaml-variants.4.14.0+options,ocaml-option-flambda,ocaml-option-musl,ocaml-option-static
          - os: ubuntu-latest
            ocaml-compiler: ocaml-variants.4.12.0+domains
            opam-repositories: |
              multicore: https://github.com/ocaml-multicore/multicore-opam.git
              default: https://github.com/ocaml/opam-repository.git
    runs-on: ${{ matrix.os }}
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a set of commands using the runners shell
      - name: 5.0.0+stable
        run: |
          sudo apt-get update && sudo apt-get -y install wget pkg-config libgmp-dev m4 libdw-dev jq python3-pip autoconf jo
          pip3 install intervaltree
          sudo chown -R opam .
          eval $(opam env)
          opam update
          opam install dune.2.9.0
          eval $(opam env)
          export ITER=1
          export OPAM_DISABLE_SANDBOXING=true
          TAG='"run_in_ci"' make run_config_filtered.json
          USE_SYS_DUNE_HACK=1 RUN_CONFIG_JSON=run_config_filtered.json make ocaml-versions/4.14.x+stable.bench
          ls _results
          cat _results/*
          
      - name: 5.0.0+stable+parallel
        run: |
          sudo apt-get update && sudo apt-get -y install wget pkg-config libgmp-dev m4 libdw-dev jq python3-pip autoconf jo
          pip3 install intervaltree
          sudo chown -R opam .
          eval $(opam env)
          opam update
          opam install dune.2.9.0
          eval $(opam env)
          export ITER=1
          export OPAM_DISABLE_SANDBOXING=true
          TAG='"run_in_ci"' make multicore_parallel_run_config_filtered.json
          TAG='"macro_bench"' make multicore_parallel_run_config_filtered_filtered.json
          make multicore_parallel_run_config_filtered_filtered_2domains.json
          USE_SYS_DUNE_HACK=1 BUILD_BENCH_TARGET=multibench_parallel RUN_CONFIG_JSON=multicore_parallel_run_config_filtered_filtered_2domains.json make ocaml-versions/4.14.x+stable.bench
          ls _results
          cat _results/*
          
      - name: 5.0.0+trunk+serial
        run: |
          sudo apt-get update && sudo apt-get -y install wget pkg-config libgmp-dev m4 libdw-dev jq python3-pip autoconf jo
          pip3 install intervaltree
          sudo chown -R opam .
          eval $(opam env)
          opam update
          opam install dune.2.9.0
          eval $(opam env)
          export ITER=1
          export OPAM_DISABLE_SANDBOXING=true
          TAG='"run_in_ci"' make run_config_filtered.json
          USE_SYS_DUNE_HACK=1 RUN_CONFIG_JSON=run_config_filtered.json make ocaml-versions/4.14.x+trunk.bench
          ls _results
          cat _results/*
          
      - name: 5.0.0+trunk+parallel
        run: |
          sudo apt-get update && sudo apt-get -y install wget pkg-config libgmp-dev m4 libdw-dev jq python3-pip autoconf jo
          pip3 install intervaltree
          sudo chown -R opam .
          eval $(opam env)
          opam update
          opam install dune.2.9.0
          eval $(opam env)
          export ITER=1
          export OPAM_DISABLE_SANDBOXING=true
          TAG='"run_in_ci"' make multicore_parallel_run_config_filtered.json
          TAG='"macro_bench"' make multicore_parallel_run_config_filtered_filtered.json
          make multicore_parallel_run_config_filtered_filtered_2domains.json
          USE_SYS_DUNE_HACK=1 BUILD_BENCH_TARGET=multibench_parallel RUN_CONFIG_JSON=multicore_parallel_run_config_filtered_filtered_2domains.json make ocaml-versions/4.14.x+trunk.bench
          ls _results
          cat _results/*
          
      - name: test_notebooks
        run: |
          sudo apt-get update && sudo apt-get -y install wget pkg-config libgmp-dev m4 libdw-dev jq python3-pip jo
          export PATH=$PATH:/home/opam/.local/bin
          pip3 install jupyter nbconvert seaborn pandas
          cd notebooks/sequential
          sudo chmod 777 .
          jupyter nbconvert --to html --execute sequential.ipynb
          cd ../parallel
          sudo chmod 777 .
          jupyter nbconvert --to html --execute parallel.ipynb
